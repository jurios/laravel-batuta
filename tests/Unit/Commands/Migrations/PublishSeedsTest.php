<?php


namespace Kodilab\LaravelBatuta\Tests\Unit\Commands\Migrations;


use Kodilab\LaravelBatuta\Console\Commands\Traits\PublishStubFiles;
use Kodilab\LaravelBatuta\Tests\TestCase;
use Symfony\Component\Finder\SplFileInfo;

class PublishSeedsTest extends TestCase
{
    use PublishStubFiles;

    protected function setUp(): void
    {
        parent::setUp(); // TODO: Change the autogenerated stub

        /*
         * We need to create a backup of the migration already applied because these tests are going to remove them.
         * As a result, we'll use the backup in the teardown method to recovery the previous migrations
         */
        $this->filesystem->copyDirectory(database_path('seeds'), database_path('tmp_seeds'));
        $this->filesystem->deleteDirectory(database_path('seeds'));
        $this->filesystem->makeDirectory(database_path('seeds'));
    }

    protected function tearDown(): void
    {
        $this->filesystem->deleteDirectory(database_path('seeds'));
        $this->filesystem->copyDirectory(database_path('tmp_seeds'), database_path('seeds'));
        $this->filesystem->deleteDirectory(database_path('tmp_seeds'));

        parent::tearDown(); // TODO: Change the autogenerated stub
    }

    public function test_calling_the_command_will_publish_the_migration_files()
    {
        $seeds = array_map(function (SplFileInfo $file) {
            return $this->removeStubExtension($file->getFilename());
        }, $this->filesystem->files(__DIR__ . '/../../../../database/seeds'));

        $this->artisan('batuta:seeds');

        $published_seeds = array_map(function (SplFileInfo $file) {
            return $file->getFilename();
        }, $this->filesystem->files(database_path('seeds')));

        $this->assertEquals($seeds, $published_seeds);
    }
}