<?php


namespace Kodilab\LaravelBatuta\Tests\Unit\Commands\Migrations;


use Kodilab\LaravelBatuta\Console\Commands\Traits\PublishStubFiles;
use Kodilab\LaravelBatuta\Tests\TestCase;
use Symfony\Component\Finder\SplFileInfo;

class PublishMigrationsTest extends TestCase
{
    use PublishStubFiles;

    protected function setUp(): void
    {
        parent::setUp(); // TODO: Change the autogenerated stub

        /*
         * We need to create a backup of the migration already applied because these tests are going to remove them.
         * As a result, we'll use the backup in the teardown method to recovery the previous migrations
         */
        $this->filesystem->copyDirectory(database_path('migrations'), database_path('tmp'));
        $this->filesystem->deleteDirectory(database_path('migrations'), true);
    }

    protected function tearDown(): void
    {
        $this->filesystem->deleteDirectory(database_path('migrations'));
        $this->filesystem->copyDirectory(database_path('tmp'), database_path('migrations'));
        $this->filesystem->deleteDirectory(database_path('tmp'));

        parent::tearDown(); // TODO: Change the autogenerated stub
    }

    public function test_calling_the_command_will_publish_the_migration_files()
    {
        $files = array_map(function (SplFileInfo $file) {
            return preg_replace('/^[0-9]{4}_[0-9]{2}_[0-9]{2}_[0-9]{6}_/', '', $this->removeStubExtension($file->getFilename()));
        },$this->filesystem->allFiles(__DIR__ . '/../../../../database/migrations'));

        $this->artisan('batuta:migrations');

        $published_files = array_map(function (SplFileInfo $file) {
            return preg_replace('/^[0-9]{4}_[0-9]{2}_[0-9]{2}_[0-9]{6}_/', '', $this->removeStubExtension($file->getFilename()));
        },$this->filesystem->allFiles(database_path('migrations')));

        $this->assertEquals($files, $published_files);
    }
}